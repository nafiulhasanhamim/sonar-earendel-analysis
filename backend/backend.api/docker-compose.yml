version: '3.8'

services:
  backend:
    container_name: backend-container
    image: backend-image
    build:
      context: ./
      dockerfile: ./Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      # - rabbitmq
      # - prometheus
      # - elasticsearch  # Add Elasticsearch dependency
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8000
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=ecommerce-cart;Username=postgres;Password=postgres
      - Redis__Host=redis
      - Redis__Port=6379
      # - RabbitMQ__Host=rabbitmq
      # - RabbitMQ__Port=5672
      # - RabbitMQ__Username=guest
      # - RabbitMQ__Password=guest
      # - ElasticSearch__Url=http://elasticsearch:9200
    restart: always

  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: ecommerce-cart
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis-cache
    restart: always
    ports:
      - "6379:6379"

  # rabbitmq:
  #   image: rabbitmq:3-management
  #   container_name: rabbitmq
  #   restart: always
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   environment:
  #     RABBITMQ_DEFAULT_USER: guest
  #     RABBITMQ_DEFAULT_PASS: guest

  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   restart: always
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   restart: always
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin

  # node-exporter:
  #   image: prom/node-exporter:latest
  #   container_name: node-exporter
  #   restart: always
  #   ports:
  #     - "9100:9100"

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
  #   container_name: elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   volumes:
  #     - elasticsearch_data:/usr/share/elasticsearch/data

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.11.0
  #   container_name: kibana
  #   depends_on:
  #     - elasticsearch
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   ports:
  #     - "5601:5601"

  # logstash:
  #   image: docker.elastic.co/logstash/logstash:8.11.0
  #   container_name: logstash
  #   depends_on:
  #     - elasticsearch
  #   ports:
  #     - "5044:5044"
  #     - "9600:9600"
  #   volumes:
  #     - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

volumes:
  postgres_data:
  # grafana_data:
  # elasticsearch_data:
