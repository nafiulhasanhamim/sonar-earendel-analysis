name: .NET CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test Application
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup .NET SDK
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x' # Adjust this to your target framework version

      # Restore dependencies
      - name: Restore Dependencies
        run: dotnet restore
        working-directory: backend/backend.api

      # Build the application
      - name: Build Application
        run: dotnet build --no-restore --configuration Release
        working-directory: backend/backend.api

      # Run Unit Tests
      # - name: Run Tests
      #   run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage"
      #   working-directory: backend/backend.test
      
      # - name: Push Docker Image
      #   if: github.ref == 'refs/heads/main'
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Push Docker Image to Registry
      #   run: |
      #     docker tag your-docker-image-name:latest your-dockerhub-username/your-docker-image-name:latest
      #     docker push your-dockerhub-username/your-docker-image-name:latest

  publish:
    name: Publish Application
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup .NET SDK
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # Restore and Build
      - name: Restore and Build
        run: |
          dotnet restore
          dotnet publish -c Release -o publish
          working-directory: backend

      # Upload Published App (Optional)
      - name: Upload Published Application
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: backend/backend.api/publish/
