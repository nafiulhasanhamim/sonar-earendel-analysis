name: .NET CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test Application
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Debug Directory Structure
        run: ls -R backend

      # Setup .NET SDK
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x' # Adjust this to your target framework version

      # Restore dependencies
      - name: Restore Dependencies
        run: dotnet restore backend/backend.sln

      # Build the application
      - name: Build Application
        run: dotnet build backend/backend.sln --no-restore --configuration Release

      # Run Unit Tests
      # - name: Run Tests
      #   working-directory: backend
      #   run: dotnet test backend.sln --no-build --configuration Release --collect:"XPlat Code Coverage"
      
      - name: Build Docker Image
        run: |
          docker build -t mdnafiulhasanhamim/backend-image:latest .
        working-directory: backend/backend.api
      
      - name: Push Docker Image
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to Registry
        run: |
          docker tag mdnafiulhasanhamim:latest mdnafiulhasanhamim/backend-image:latest
          docker push mdnafiulhasanhamim/backend-image:latest

  publish:
    name: Publish Application
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore Dependencies
        run: dotnet restore backend/backend.sln

      - name: Build and Publish
        run: dotnet publish backend/backend.api/backend.api.csproj -c Release -o backend/backend.api/publish

      - name: Upload Published Application
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: backend/backend.api/publish/